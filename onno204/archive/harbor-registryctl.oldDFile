# Copied from https://github.com/goharbor/harbor/blob/main/make/photon/registryctl/Dockerfile
# Copied from https://github.com/goharbor/harbor/blob/main/make/photon/registry/Dockerfile

FROM golang:1.23.2 as go-binary

ENV DISTRIBUTION_DIR /go/src/github.com/docker/distribution
ENV BUILDTAGS include_oss include_gcs
ENV GO111MODULE auto

WORKDIR $DISTRIBUTION_DIR
# COPY ./onno204/harbor-registry/ $DISTRIBUTION_DIR

RUN git clone https://gitlab.com/gitlab-org/container-registry.git .
RUN file="$(ls -1 $DISTRIBUTION_DIR) " && echo $file
RUN CGO_ENABLED=0 make PREFIX=/go clean binaries

# START: https://github.com/goharbor/harbor/blob/main/make/photon/registryctl/Dockerfile.base
FROM photon:5.0 as photon-builder

RUN tdnf install -y shadow >> /dev/null \
  && tdnf clean all \
  && groupadd -r -g 10000 harbor && useradd --no-log-init -m -g 10000 -u 10000 harbor \
  && mkdir -p /etc/registry

# START: https://github.com/goharbor/harbor/blob/main/make/photon/registryctl/Dockerfile
FROM photon-builder as production

COPY --chmod=0755 ./onno204/harbor-common/install_cert.sh /home/harbor
COPY --chmod=0755 --from=go-binary /go/src/github.com/docker/distribution/bin/registry /usr/bin/registry_DO_NOT_USE_GC
COPY --chmod=0755 ./onno204/harbor-registryctl/start.sh /home/harbor
# COPY --chmod=0755 ./make/photon/registryctl/harbor_registryctl /home/harbor

RUN chown -R harbor:harbor /etc/pki/tls/certs \
  && chown harbor:harbor /home/harbor/harbor_registryctl && chmod u+x /home/harbor/harbor_registryctl \
  && chown harbor:harbor /usr/bin/registry_DO_NOT_USE_GC && chmod u+x /usr/bin/registry_DO_NOT_USE_GC \
  && chown harbor:harbor /home/harbor/start.sh && chmod u+x /home/harbor/start.sh \
  && chown harbor:harbor /home/harbor/install_cert.sh && chmod u+x /home/harbor/install_cert.sh

RUN mkdir -p /etc/harbor/ssl
RUN chown -R harbor:harbor /etc/harbor/ssl

HEALTHCHECK CMD curl --fail -s http://localhost:8080/api/health || curl -sk --fail --key /etc/harbor/ssl/registryctl.key --cert /etc/harbor/ssl/registryctl.crt https://localhost:8443/api/health || exit 1

VOLUME ["/var/lib/registry"]

ENTRYPOINT ["/home/harbor/start.sh"]

USER harbor